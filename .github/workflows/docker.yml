name: Docker Build & Publish

on:
  push:
    branches: ["**"]      # run on any branch; change to ["main"] if you prefer
    tags: ["v*"]          # build on version tags like v1.2.3
  workflow_dispatch: {}   # allow manual runs from the Actions tab

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}   # may contain uppercase; we'll normalize

concurrency:
  group: docker-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Normalize image name to lowercase
        id: repo
        run: |
          # Lowercase "owner/repo" to satisfy Docker tag rules
          echo "image_name_lc=$(echo '${{ env.IMAGE_NAME }}' | tr '[:upper:]' '[:lower:]')" >> "$GITHUB_OUTPUT"

      - name: Derive tags
        id: meta
        run: |
          REF="${GITHUB_REF#refs/}"
          SHA_TAG=${GITHUB_SHA::12}
          echo "sha_tag=${SHA_TAG}" >> "$GITHUB_OUTPUT"
          if [[ "$REF" == tags/v* ]]; then
            V="${REF#tags/v}"
            echo "version_tag=${V}" >> "$GITHUB_OUTPUT"
          fi
          if [[ "$REF" == heads/main ]]; then
            echo "latest_tag=latest" >> "$GITHUB_OUTPUT"
          fi

      - name: Build & push (multi-arch)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          # Use the normalized, lowercase image name
          tags: |
            ${{ env.REGISTRY }}/${{ steps.repo.outputs.image_name_lc }}:${{ steps.meta.outputs.sha_tag }}
            ${{ steps.meta.outputs.version_tag && format('{0}/{1}:{2}', env.REGISTRY, steps.repo.outputs.image_name_lc, steps.meta.outputs.version_tag) || '' }}
            ${{ steps.meta.outputs.latest_tag && format('{0}/{1}:{2}', env.REGISTRY, steps.repo.outputs.image_name_lc, steps.meta.outputs.latest_tag) || '' }}

      - name: Smoke test just-built image
        run: |
          IMAGE="${{ env.REGISTRY }}/${{ steps.repo.outputs.image_name_lc }}:${{ steps.meta.outputs.sha_tag }}"
          echo "Smoke testing ${IMAGE}"
          docker run --rm "$IMAGE" python -c "import adaptive_oscillator, sys; print('âœ… import ok:', getattr(adaptive_oscillator,'__version__','?'), 'on', sys.version)"
