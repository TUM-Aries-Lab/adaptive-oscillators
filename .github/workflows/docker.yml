name: Docker Build & Publish

on:
  push:
    branches: [ main ]
    tags: ["v*"]   # pushes version tags like v1.2.3 also publish

permissions:
  contents: read
  packages: write   # needed to push to ghcr.io

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}  # ghcr.io/<owner>/<repo>

concurrency:
  group: docker-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract version/tag meta
        id: meta
        run: |
          # Compute tags:
          # - always tag with the short SHA
          # - if pushing a tag like v1.2.3, also tag 1.2.3
          # - if branch is main, also tag latest
          REF="${GITHUB_REF#refs/}"
          SHA_TAG=${GITHUB_SHA::12}
          echo "sha_tag=${SHA_TAG}" >> $GITHUB_OUTPUT

          if [[ "$REF" == tags/v* ]]; then
            V="${REF#tags/v}"
            echo "version_tag=${V}" >> $GITHUB_OUTPUT
          fi

          if [[ "$REF" == heads/main ]]; then
            echo "latest_tag=latest" >> $GITHUB_OUTPUT
          fi

      - name: Build (multi-arch) and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.sha_tag }}
            ${{ steps.meta.outputs.version_tag && format('{0}/{1}:{2}', env.REGISTRY, env.IMAGE_NAME, steps.meta.outputs.version_tag) || '' }}
            ${{ steps.meta.outputs.latest_tag && format('{0}/{1}:{2}', env.REGISTRY, env.IMAGE_NAME, steps.meta.outputs.latest_tag) || '' }}

      - name: Smoke test (run container, import adaptive_oscillator)
        run: |
          # Use the just-built SHA tag to smoke test
          IMAGE="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.sha_tag }}"
          echo "Running smoke test on ${IMAGE}"
          docker run --rm "$IMAGE" python -c "import adaptive_oscillator, sys; print('âœ… import ok:', getattr(adaptive_oscillator,'__version__','?'), 'on', sys.version)"
