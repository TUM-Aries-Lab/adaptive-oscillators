name: Docker Build & Publish

on:
  push:
    branches: [ main ]
    tags: ["v*"]

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

concurrency:
  group: docker-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Derive tags
        id: meta
        run: |
          REF="${GITHUB_REF#refs/}"
          SHA_TAG=${GITHUB_SHA::12}
          echo "sha_tag=${SHA_TAG}" >> $GITHUB_OUTPUT
          if [[ "$REF" == tags/v* ]]; then
            V="${REF#tags/v}"
            echo "version_tag=${V}" >> $GITHUB_OUTPUT
          fi
          if [[ "$REF" == heads/main ]]; then
            echo "latest_tag=latest" >> $GITHUB_OUTPUT
          fi

      - name: Build & push (multi-arch)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.sha_tag }}
            ${{ steps.meta.outputs.version_tag && format('{0}/{1}:{2}', env.REGISTRY, env.IMAGE_NAME, steps.meta.outputs.version_tag) || '' }}
            ${{ steps.meta.outputs.latest_tag && format('{0}/{1}:{2}', env.REGISTRY, env.IMAGE_NAME, steps.meta.outputs.latest_tag) || '' }}

      - name: Smoke test just-built image
        run: |
          IMAGE="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.sha_tag }}"
          echo "Smoke testing ${IMAGE}"
          docker run --rm "$IMAGE" python -c "import adaptive_oscillator, sys; print('âœ… import ok:', getattr(adaptive_oscillator,'__version__','?'), 'on', sys.version)"
